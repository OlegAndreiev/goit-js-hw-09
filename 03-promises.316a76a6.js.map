{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,yBAClCC,EAAUF,SAASC,cAAc,SAwCvC,SAASE,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACTC,QAAQC,IAAIR,GACRA,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAlDbH,EAAQa,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAIC,iBACJlB,EAASmB,aAAa,YAAY,GAClC,MACEC,UAAYd,MAAAe,EAAKC,KAAEA,EAAIC,OAAEA,IACvBN,EAAIO,cACR,IAAIC,EAAUC,OAAOL,EAAMM,OACvBC,EAASF,OAAOJ,EAAKK,OACrBE,EAAWH,OAAOH,EAAOI,OACzBG,EAAaL,EAAUG,EAASC,EAEpC,GAAIJ,EAAU,GAAKG,EAAS,GAAKC,EAAW,EAE1C,YADA/B,EAAAiC,OAAOC,QAAQ,SAGjB,IAAK,IAAIC,EAAW,EAAGA,GAAYJ,EAAUI,GAAY,EACvDjC,EAASmB,aAAa,YAAY,GAClCf,EAAc6B,EAAUR,GACrBS,MAAK,EAAC7B,SAAEA,EAAQC,MAAEA,KACjBR,EAAAiC,OAAOI,QAAQ,uBAAqB9B,QAAiBC,SAAY8B,OAElE,EAAO/B,WAAUC,WAChBR,EAAAiC,OAAMC,QAAC,sBAAS3B,QAA8BC,SAGlDmB,GAAWG,EAMUS,EAJPP,EAKhBjB,YAAW,KACTb,EAASsC,UAAW,CAAK,GACxBD,GANHlC,EAAQoC,QAGV,IAAyBF,C,IAoBzBvB,QAAQC,IAAIX,EAAc,EAAG","sources":["src/js/03-promises.js"],"sourcesContent":["// import { Notify } from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst startBtn = document.querySelector('button[type=\"submit\"]');\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  startBtn.setAttribute('disabled', true);\n  const {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n  let delayEl = Number(delay.value);\n  let stepEl = Number(step.value);\n  let amountEl = Number(amount.value);\n  let totalDelay = delayEl + stepEl * amountEl;\n\n  if (delayEl < 0 || stepEl < 0 || amountEl < 0) {\n    Notify.failure('Alert');\n    return;\n  }\n  for (let position = 1; position <= amountEl; position += 1) {\n    startBtn.setAttribute('disabled', true);\n    createPromise(position, delayEl)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n\n    delayEl += stepEl;\n  }\n  turnOffBtnStart(totalDelay);\n  formRef.reset();\n}\n\nfunction turnOffBtnStart(total) {\n  setTimeout(() => {\n    startBtn.disabled = false;\n  }, total);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((Resolve, Reject) => {\n    setTimeout(() => {\n      console.log(shouldResolve);\n      if (shouldResolve) {\n        Resolve({ position, delay });\n      } else {\n        Reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nconsole.log(createPromise(5, 1000));\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$startBtn","document","querySelector","$47d4ff9957288465$var$formRef","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","Resolve","Reject","setTimeout","console","log","addEventListener","evt","preventDefault","setAttribute","elements","delay1","step","amount","currentTarget","delayEl","Number","value","stepEl","amountEl","totalDelay","Notify","failure","position1","then","success","catch","total","disabled","reset"],"version":3,"file":"03-promises.316a76a6.js.map"}